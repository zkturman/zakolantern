{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nexport let DeviceSizeFinderService = /*#__PURE__*/(() => {\n  class DeviceSizeFinderService {\n    constructor(responsive) {\n      this.responsive = responsive;\n      this.resetSizes();\n      this.determineDeviceSize();\n    }\n    determineDeviceSize() {\n      this.responsive.observe([Breakpoints.HandsetPortrait, Breakpoints.HandsetLandscape, Breakpoints.TabletPortrait, Breakpoints.TabletLandscape]).subscribe(result => {\n        this.resetSizes();\n        const breakpoints = result.breakpoints;\n        if (breakpoints[Breakpoints.HandsetPortrait]) {\n          this.isPhonePortrait = true;\n        } else if (breakpoints[Breakpoints.HandsetLandscape]) {\n          this.isPhoneLandscape = true;\n        } else if (breakpoints[Breakpoints.TabletPortrait]) {\n          this.isTabletPortrait = true;\n        } else if (breakpoints[Breakpoints.TabletLandscape]) {\n          this.isTabletLandscape = true;\n        }\n      });\n    }\n    resetSizes() {\n      this.isPhonePortrait = false;\n      this.isPhoneLandscape = false;\n      this.isTabletPortrait = false;\n      this.isTabletLandscape = false;\n    }\n    getIsPhonePortrait() {\n      return this.isPhonePortrait;\n    }\n    getIsPhoneLandscape() {\n      return this.isPhoneLandscape;\n    }\n    getIsTabletPortrait() {\n      return this.isTabletPortrait;\n    }\n    getIsTabletLandscape() {\n      return this.isTabletLandscape;\n    }\n    static #_ = this.ɵfac = function DeviceSizeFinderService_Factory(t) {\n      return new (t || DeviceSizeFinderService)(i0.ɵɵinject(i1.BreakpointObserver));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DeviceSizeFinderService,\n      factory: DeviceSizeFinderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return DeviceSizeFinderService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}